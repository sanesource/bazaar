name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab
    inputs:
      version:
        description: "Version number (e.g., 1.0.0)"
        required: true
        default: "1.0.0"

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_pattern: |
              dist/*.AppImage
              dist/*.deb
              dist/latest-linux.yml
          - os: macos-latest
            platform: mac
            artifact_pattern: |
              dist/*.dmg
              dist/*.zip
              dist/latest-mac.yml
          - os: windows-latest
            platform: windows
            artifact_pattern: |
              dist/*.exe
              dist/latest.yml

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for ${{ matrix.platform }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

      - name: List dist contents (debug)
        shell: bash
        run: ls -lah dist/ || echo "No dist directory"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bazaar-${{ matrix.platform }}
          path: ${{ matrix.artifact_pattern }}
          retention-days: 5
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List all artifacts (debug)
        run: |
          echo "=== All downloaded artifacts ==="
          ls -lR artifacts/

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${VERSION}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Bazaar ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/bazaar-linux/*.AppImage
            artifacts/bazaar-linux/*.deb
            artifacts/bazaar-mac/*.dmg
            artifacts/bazaar-mac/*.zip
            artifacts/bazaar-windows/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
